library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

entity Nucleo is
   port(
clock: in std_logic;
entrada: in std_logic_vector(7 downto 0); 
salida:out std_logic_vector(3 downto 0); 
disp1: out std_logic;
disp2: out std_logic);
end Nucleo;

architecture Behavioral of Nucleo is

  signal aritmetico : std_logic_vector(7 downto 0);
  signal aritm1 : std_logic_vector(7 downto 0);
  signal contador : integer;
 

begin  

 de: process(entrada)
  
  variable a : std_logic_vector(7 downto 0);
  variable b : std_logic_vector(7 downto 0);
  variable c : std_logic_vector(7 downto 0);
  begin
  

  if entrada<"00001010" then
aritmetico <= entrada;
aritm1<= "00000000";

if clock = '1' then
disp1 <= '1';
disp2 <= '0';

salida <= aritmetico(3 downto 0);
aritmetico <= entrada;
else
disp1 <= '0';
disp2 <= '1'; 
salida <= aritm1(3 downto 0);
end if;
a := "00001010";
b := "00000000";
else

b := "00000000";
a := entrada;
 
bucle1: for z in 0 to 9 loop
   a := a-9;
b :=b+1;
          IF a<(10) THEN
           EXIT bucle1;
         END IF;

end loop;


		 
if clock = '1' then
disp1 <= '1';
disp2 <= '0';

salida <= a(3 downto 0);

else
disp1 <= '0';
disp2 <= '1'; 
salida <= b(3 downto 0);
end if;
end if;



end process de;
end Behavioral;